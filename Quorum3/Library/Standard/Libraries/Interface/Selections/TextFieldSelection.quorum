package Libraries.Interface.Selections

use Libraries.Containers.Support.Pair
use Libraries.Interface.Controls.TextField

/*
    A selection represents what would be interacted with if the parent is used. The 
    general idea of selection is common across user interface elements. For example, 
    trees have a selection,  which represents the item in the tree that the user is 
    interacting with if the tree itself has a focus. Similarly, text boxes have a 
    very different kind of selection, which represents which region of the text is 
    being interacted with. Selection represents a generic way to get the name of the 
    selection. 

    In the case of TextFieldSelection, this selection is very different from the 
    Tree or Menu Selections. Instead, this selection allows us to obtain 
    information about the location of the Caret or, If multiple characters are 
    selected, the begin and end of the selection region. 
*/
class TextFieldSelection is Selection
    Pair<integer> indices
    boolean caretAtEnd = true
    boolean textChanged = false

    /* A default constructor for the object. */
    on create
        indices:Set(0, 0)
    end

    /*
        This action returns true if there is no selection. In the case of the
        textbox, there is considered to be no selection if the indices are the same.

        Attribute: Returns True if there is no selection.
    */
    action IsEmpty returns boolean
        return indices:AreValuesEqual()
    end

    /* 
        This action is used internally to set the path on the Selection. It 
        should generally not needed by a programmer not working in Quorum's 
        standard library.
        Attribute: Parameter startIndex The start index
        Attribute: Parameter endIndex The end index
        Attribute: Parameter caretAtEnd Whether the caret is at the end of the text value.
    */
    action Set(integer startIndex, integer endIndex, boolean caretAtEnd, boolean textChanged)
        TextField textField = GetTextField()
        if textField not= undefined
            indices:Set(startIndex, endIndex)
            me:caretAtEnd = caretAtEnd
            me:textChanged = textChanged

            text value = textField:GetText()
            SetDisplayName(value:GetSubtext(startIndex, endIndex))
        end
    end

    /* 
        This action is a helper to obtain the TextField without casting.
 
        Attribute: Returns The TextField associated with this selection.
    */
    action GetTextField returns TextField
        if GetItem() is TextField
            TextField textField = cast(TextField, GetItem())
            return textField
        end
        return undefined
    end

    /* 
        This action obtains the starting index of the selection.

        Attribute: Returns The index
    */
    action GetStartIndex returns integer
        return indices:GetFirstValue()
    end
    
    /* 
        This action obtains the ending index of the selection.

        Attribute: Returns The index
    */
    action GetEndIndex returns integer
        return indices:GetSecondValue()
    end

    /* 
        This action returns true if the caret is at the end of the text value. 
        Attribute: Returns Whether the caret is at the end.
    */
    action IsCaretAtEnd returns boolean
        return caretAtEnd
    end

    /* 
        This action returns true if the current selection was the result of
        insertion or deletion into the TextBox, or false if the selection moved
        without changing the text.

        Attribute: Returns Whether this selection was the result of TextBox insertion or deletion.
    */
    action IsTextChanging returns boolean
        return textChanged
    end

    /* 
        This action empties the selection.
    */
    action Empty
        indices:Set(0, 0)
    end
end
