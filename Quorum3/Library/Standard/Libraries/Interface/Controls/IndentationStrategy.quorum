package Libraries.Interface.Controls

use Libraries.Containers.MultipleLineText

class IndentationStrategy 

    integer indentationSize = 4

    /*
    Indents the TextBox on the given line from the provided index on
    that line. In a TextBox this is typically done by pressing the TAB key.
    */
    action AddIndentation(TextBox textBox, integer line, integer index)
        MultipleLineText textValue = textBox:GetMultipleLineText()
        integer characterIndex = textValue:CharacterIndexFromLineIndex(line) + index
        integer toAdd = indentationSize - (index mod indentationSize)
        text spaces = ""
        repeat toAdd times
            spaces = spaces + " "
        end
        textBox:Insert(characterIndex, spaces)
    end

    /*
    Reduces the indentation on a given line from the provided index in a
    TextBox. In a TextBox this is typically done by pressing SHIFT-TAB.
    */
    action RemoveIndentation(TextBox textBox, integer line, integer index)
        // If we're at the beginning of a line, return early.
        if index = 0
            return now
        end

        MultipleLineText textValue = textBox:GetMultipleLineText()
        text lineText = textValue:GetLines():Get(line):GetText()

        // If there are any non-space characters before the index, return early.
        integer counter = 0
        repeat while counter < index
            if lineText:GetCharacter(counter) not= " "
                return now
            end

            counter = counter + 1
        end

        integer characterIndex = textValue:CharacterIndexFromLineIndex(line) + index

        integer toRemove = index mod indentationSize
        if toRemove = 0
            toRemove = indentationSize
        end

        textBox:Delete(characterIndex - toRemove, characterIndex)
    end

    action SetSize(integer size)
        indentationSize = size
    end

    action GetSize returns integer
        return indentationSize
    end
end