package Libraries.Interface.Controls

use Libraries.Containers.Array

class TreeTableRow
    
    TreeTableRow parentRow = undefined
    Array<TreeTableRow> children
    boolean expanded = false

    // How far down a tree hierarchy this is. A top-level TreeRow has a depth
    // of 0, its children have a depth of 1, and so on.
    // Used for padding elements.
    integer treeDepth = 0

    action IsEmpty returns boolean
        return children:IsEmpty()
    end

    action GetSize returns integer
        return children:GetSize()
    end

    action IsExpanded returns boolean
        return expanded
    end

    /*
    This action is used internally to allow the TreeTableRow to track whether or
    not it is currently expanded inside a TreeTable. This action is called
    automatically as necessary by the TreeTable and shouldn't be called manually
    by users.
    */
    action SetExpandFlag(boolean expand)
        expanded = expand
    end

    action GetTreeDepth returns integer
        return treeDepth
    end

    action AddRow(TreeTableRow row)
        children:Add(row)
        row:SetParent(me)
    end

    /*
    This action sets a reference to the parent TreeTableRow. It is called 
    automatically when a TreeTableRow is added as a child to another item. 
    Most users will not need to use this action directly.
    */
    action SetParent(TreeTableRow item)
        parentRow = item

        if item = undefined
            treeDepth = 0
        else
            TreeTableRow parentRow = cast(TreeTableRow, item)
            treeDepth = parentRow:GetTreeDepth() + 1
        end
    end

    action GetParent returns TreeTableRow
        return parentRow
    end

    action GetChildren returns Array<TreeTableRow>
        return children
    end
end