package Libraries.Interface.Controls

use Libraries.Containers.Array
use Libraries.Interface.Item2D
use Libraries.Interface.Controls.Control
use Libraries.Interface.Layouts.Layout
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Interface.Events.TabChangeListener
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Game.Graphics.Font

class TabPane is Control
    
    TabBar bar
    Item2D currentItem = undefined
    Control viewArea
    TabPaneSelection selection

    on create
        SetInputGroup("TabPane")
        SetName("Tab Pane")
        viewArea:SetName("Tab View Area")
        SetFocusable(true)
        SetAccessibilityCode(parent:Item:TABPANE)

        bar:SetTabPane(me)
        
        Font font
        text defaultFontName = GetDefaultFontName()
        if defaultFontName not= undefined
            font:LoadFont(defaultFontName)
            integer defaultFontSize = GetDefaultFontSize()
            font:SetSize(defaultFontSize)
            SetFont(font)
            SetFontSize(font:GetSize())
        end
        
        LayoutProperties paneProperties = GetDefaultLayoutProperties()
        paneProperties:SetHorizontalLayoutMode(paneProperties:STANDARD)
        paneProperties:SetVerticalLayoutMode(paneProperties:STANDARD)
        paneProperties:SetPercentageWidth(1)
        paneProperties:SetPercentageHeight(1)

        LayoutProperties viewLayoutProperties = viewArea:GetDefaultLayoutProperties()
        viewLayoutProperties:SetHorizontalLayoutMode(viewLayoutProperties:STANDARD)
        viewLayoutProperties:SetVerticalLayoutMode(viewLayoutProperties:FILL)
        viewLayoutProperties:SetPercentageX(0)
        viewLayoutProperties:SetPercentageWidth(1)
        viewArea:SetClipping(true)

        Add(bar)
        Add(viewArea)

        selection:Initialize(me, -1)

        FlowLayout layout
        SetLayout(layout)

        FlowLayout flow
        viewArea:SetLayout(flow)
    end

    action GetDefaultFontName returns text
        Font font
        if font:FontIsAvailable("Arial")
            return "Arial"
        else
            return parent:Control:GetDefaultFontName()
        end
    end

    action GetDefaultFontSize returns integer
        return 22
    end

    action SetViewAreaLayout(Layout layout)
        viewArea:SetLayout(layout)
    end

    action GetViewAreaLayout returns Layout
        return viewArea:GetLayout()
    end

    private action SetCurrentItem(Item2D item)
        if currentItem not= undefined
            viewArea:Remove(currentItem)
        end
        if item not= undefined
            viewArea:Add(item)
            item:Focus()
        else
            Focus()
        end
        currentItem = item
        //viewArea:Resize()
        Resize()
    end

    action GetCurrentItem returns Item2D
        return currentItem
    end

    action Add(Array<Tab> array)
        bar:Add(array)
    end

    action Add(Tab tab)
        bar:Add(tab)
    end

    action Remove(Tab tab)
        bar:Remove(tab)
    end

    action Get(integer index) returns Tab
        return bar:Get(index)
    end

    action GetSize returns integer
        return bar:GetSize()
    end

    action Select(integer index)
        if index = -1
            Deselect()
        elseif index >= 0 and index < GetSize()
            Get(index):SetToggleState(true)
        end
    end

    action Select(Tab tab)
        integer size = GetSize()
        integer counter = 0
        repeat while counter < size
            if Get(counter) = tab
                Select(counter)
                return now
            end
            counter = counter + 1
        end
    end

    action Deselect
        integer index = selection:GetIndex()
        if index >= 0 and index < GetSize()
            Get(index):SetToggleState(false)
        end
    end

    action UpdateSelection(Tab tab)
        integer size = GetSize()
        integer index = selection:GetIndex()
        if index >= 0 and index < size
            if Get(index) = tab
                return now
            end
        end

        integer counter = 0
        boolean found = false

        if tab not= undefined
            repeat while counter < size
                if Get(counter) = tab
                    selection:Set(counter)
                    found = true
                    counter = size
                end
                counter = counter + 1
            end
        end

        if found
            SetCurrentItem(tab:GetRelatedItem())
        else
            SetCurrentItem(undefined)
            selection:Set(-1)
        end
    end

    action GetSelection returns TabPaneSelection
        return selection
    end

    action AddTabChangeListener(TabChangeListener listener)
        bar:AddTabChangeListener(listener)
    end

    action RemoveTabChangeListener(TabChangeListener listener)
        bar:RemoveTabChangeListener(listener)
    end

    /*
    This action sets the Font to be used by this Control. How this Font is used
    varies between Controls, and in some cases the Control will ignore it 
    entirely (for example, ScrollPanes), but typically this sets the font that's
    used for the default label on many Controls, such as Buttons. If the Font
    is undefined, many Controls will omit their default label.

    Attribute: Parameter font The Font to use for this Control.
    */
    action SetFont(Font font)
        parent:Control:SetFont(font)
        if bar not= undefined
            bar:SetFont(font)
        end
    end

    /*
    This action sets the base Font size to be used by this Control, if the
    Control uses a Font.
    */
    action SetFontSize(integer size)
        parent:Control:SetFontSize(size)
        if bar not= undefined
            bar:SetFontSize(size)
        end
    end
end
