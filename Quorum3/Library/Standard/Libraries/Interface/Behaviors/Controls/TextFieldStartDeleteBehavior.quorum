package Libraries.Interface.Behaviors.Controls

use Libraries.Interface.Item
use Libraries.Interface.Controls.TextField
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Behaviors.Controls.TextFieldDeleteBehavior

class TextFieldStartDeleteBehavior is Behavior
    
    public constant integer BACKWARD = 1
    public constant integer FORWARD = 2
 
    integer direction = 0

    action SetDirection(integer direction)
        me:direction = direction
    end

    action GetDirection returns integer
        return direction
    end

    action Run(BehaviorEvent event)
        Item item = event:GetItem()
        if not (item is TextField)
            return now
        end

        TextField field = cast(TextField, item)

        TextFieldDeleteBehavior behavior
        behavior:SetTimer(field:GetCaretIdleTime())

        /*
        Begin deleting in the given direction. Deletion will continue until the
        key is released or another command overrides it.
        */
        if direction = BACKWARD
            behavior:SetDirection(BACKWARD)
            field:AddBehavior(behavior)
        elseif direction = FORWARD
            behavior:SetDirection(FORWARD)
            field:AddBehavior(behavior)
        end
    end
end