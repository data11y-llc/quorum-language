package Libraries.Interface.Views

use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.ColorGroup
use Libraries.Game.Graphics.Texture
use Libraries.Game.Graphics.Painter2D
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.PixelMap
use Libraries.Game.Graphics.Format
use Libraries.Interface.Layouts.LayoutProperties

class CheckboxView is ToggleView, Drawable

    boolean toggled = false
    Drawable center
    number borderThickness = 0

    ColorGroup baseColor = undefined
    ColorGroup selectColor = undefined
    ColorGroup borderColor = undefined
    ColorGroup selectBorderColor = undefined
    Color checkColor

    on create
        checkColor = checkColor:White()
    end

    action Initialize(integer size, LayoutProperties properties)
        baseColor = properties:GetBackgroundColor()
        selectColor = properties:GetSelectionColor()
        borderColor = properties:GetBorderColor()
        selectBorderColor = properties:GetSelectionBorderColor()

        borderThickness = properties:GetBorderThickness()

        LoadFilledRectangle(size, size, borderColor)
        center:Load(CreateCheckTexture())
        center:SetSize(size - 2 * borderThickness, size - 2 * borderThickness)
        center:SetPosition(borderThickness, borderThickness)

        center:Hide()

        Add(center)
    end

    private action CreateCheckTexture returns Texture
        PixelMap map
        Format format
        format:SetValue(format:RGBA8888)

        Color base = selectColor:GetBottomLeft()

        map:CreatePixelMap(50, 50, format)
        map:Fill(base)
        integer i = -2
        repeat while i < 3
            map:DrawLine(10, 30 + i, 20, 40 + i, checkColor)
            map:DrawLine(20, 40 + i, 40, 10 + i, checkColor)
            i = i + 1
        end

        Color blur = checkColor:CustomColor(
            (checkColor:GetRed() + base:GetRed()) / 2.0,
            (checkColor:GetGreen() + base:GetGreen()) / 2.0,
            (checkColor:GetBlue() + base:GetBlue()) / 2.0, 
            1)
        map:DrawLine(10, 30 - 3, 20, 40 - 3, blur)
        map:DrawLine(20, 40 - 3, 40, 10 - 3, blur)
        map:DrawLine(10, 30 + 3, 20, 40 + 3, blur)
        map:DrawLine(20, 40 + 3, 40, 10 + 3, blur)

        Texture texture
        texture:LoadFromPixelMap(map)
        return texture
    end

    action SetCheckColor(Color color)
        checkColor = color

        Texture checkTexture = center:GetTexture()
        if checkTexture not= undefined
            checkTexture:Dispose()
            center:Load(CreateCheckTexture())
        end
    end

    action GetCheckColor returns Color
        return checkColor
    end

    action SetToggleState(boolean selected)
        toggled = selected
        
        if toggled
            SetColor(selectBorderColor)
            center:Show()
        else
            SetColor(borderColor)
            center:Hide()
        end
    end

    action GetToggleState returns boolean
        return toggled
    end

    action Draw(Painter2D painter)
        parent:Drawable:Draw(painter)
    end

    action UpdateSize(number width, number height)
        Texture texture = GetTexture()
        if texture = undefined
            return now
        end

        SetSize(width, height)
        center:SetSize(width - 2 * borderThickness, height - 2 * borderThickness)
    end

    action UpdatePosition(number x, number y, number z)
        SetPosition(x, y, z)
    end

    action UpdateRotation(number angle)
        SetRotation(angle)
    end

    action UpdateFlipping(boolean flipX, boolean flipY)
        SetFlipX(flipX)
        SetFlipY(flipY)
    end

    action Copy returns ControlView
        RadioButtonView view
        LayoutProperties properties
        properties:SetBackgroundColor(baseColor)
        properties:SetBorderColor(borderColor)
        properties:SetSelectionColor(selectColor)
        properties:SetSelectionBorderColor(selectBorderColor)
        properties:SetBorderThickness(borderThickness)
        view:Initialize(cast(integer, GetWidth()/2), properties)
        return view
    end
end