package Libraries.Interface.Views

use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Painter2D
use Libraries.Game.Graphics.Label
use Libraries.Game.Graphics.Texture
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.ColorGroup
use Libraries.Game.Graphics.Gradient
use Libraries.Game.Graphics.Font
use Libraries.Containers.Array
use Libraries.Interface.Item2D
use Libraries.Compute.BitwiseOperations

class LabelBoxView is Item2D, ControlView

    public constant integer NONE = 0
    public constant integer LEFT = 1
    public constant integer RIGHT = 2
    public constant integer BOTTOM = 4
    public constant integer TOP = 8
    public constant integer ALL = 15
    
    /*
    Bitmask representing which sides of the box have borders.
    */
    integer borderStyle = ALL
    
    Drawable border
    Drawable background
    Drawable clickEffect
    Drawable mouseOverEffect
//    Label label

    BitwiseOperations bits

    integer borderThickness = 0

    action Initialize(ColorGroup backgroundColor, ColorGroup borderColor)
        background:LoadFilledRectangle(1, 1, backgroundColor)
        border:LoadFilledRectangle(1, 1, borderColor)
        Add(border)
        Add(background)

        InitializeEffects()
        SetText("")
    end

    action Initialize(ColorGroup backgroundColor, ColorGroup borderColor, text labelText)
        background:LoadFilledRectangle(1, 1, backgroundColor)
        border:LoadFilledRectangle(1, 1, borderColor)
        Add(border)
        Add(background)

        InitializeEffects()
//        SetText(labelText)
    end

    private action InitializeEffects
        Color color

        Gradient clickGradient
        Color fadedBlack = color:CustomColor(0, 0, 0, 0.25)
        Color transparentBlack = color:CustomColor(0, 0, 0, 0.1)
        clickGradient:Set(transparentBlack, transparentBlack, fadedBlack, fadedBlack)

        clickEffect:LoadFilledRectangle(1, 1, clickGradient)

        Gradient mouseOverGradient
        Color fadedWhite = color:CustomColor(1, 1, 1, 0.25)
        Color transparentWhite = color:CustomColor(1, 1, 1, 0.1)
        mouseOverGradient:Set(transparentWhite, transparentWhite, fadedWhite, fadedWhite)

        mouseOverEffect:LoadFilledRectangle(1, 1, mouseOverGradient)

//        Add(label)
    end

    action SetBackgroundColor(ColorGroup color)
        background:SetColor(color)
    end

    action SetText(text newText)
//        label:SetText(newText)
        
//        number labelWidth = label:GetWidth()
//        number labelHeight = label:GetHeight()

        // Adjust the label upwards if it takes multiple lines.
//        number yOffset = labelHeight - label:GetLineHeight()

//        label:SetPosition(cast(integer, (background:GetWidth() * background:GetScaleX() - labelWidth) / 2 + background:GetX()), cast(integer, (background:GetHeight() * background:GetScaleY() - labelHeight) / 2 + background:GetY() + yOffset))
    end

    action GetText returns text
//        return label:GetText()
        return ""
    end

    action SetFont(Font font)
//        label:SetFont(font)
    end

    action GetFont returns Font
//        return label:GetFont()
        return undefined
    end

    action SetBorderThickness(integer thickness)
        borderThickness = thickness
    end

    action GetBorderThickness returns integer
        return borderThickness
    end

    action SetBorderStyle(integer style)
        borderStyle = style
    end

    action SetLeftBorder(boolean value)
        if value
            borderStyle = bits:Or(borderStyle, LEFT)
        else
            borderStyle = bits:Or(borderStyle, LEFT)
            borderStyle = bits:ExclusiveOr(borderStyle, LEFT)
        end
    end

    action SetRightBorder(boolean value)
        if value
            borderStyle = bits:Or(borderStyle, RIGHT)
        else
            borderStyle = bits:Or(borderStyle, RIGHT)
            borderStyle = bits:ExclusiveOr(borderStyle, RIGHT)
        end
    end

    action SetBottomBorder(boolean value)
        if value
            borderStyle = bits:Or(borderStyle, BOTTOM)
        else
            borderStyle = bits:Or(borderStyle, BOTTOM)
            borderStyle = bits:ExclusiveOr(borderStyle, BOTTOM)
        end
    end

    action SetTopBorder(boolean value)
        if value
            borderStyle = bits:Or(borderStyle, TOP)
        else
            borderStyle = bits:Or(borderStyle, TOP)
            borderStyle = bits:ExclusiveOr(borderStyle, TOP)
        end
    end

    action GetBorderStyle returns integer
        return borderStyle
    end

    action HasLeftBorder returns boolean
        return bits:And(LEFT, borderStyle) not= 0
    end

    action HasRightBorder returns boolean
        return bits:And(RIGHT, borderStyle) not= 0
    end

    action HasBottomBorder returns boolean
        return bits:And(BOTTOM, borderStyle) not= 0
    end

    action HasTopBorder returns boolean
        return bits:And(TOP, borderStyle) not= 0
    end

    action Draw(Painter2D painter)
        parent:Item2D:Draw(painter)
    end

    action UpdateSize(number width, number height)
        if background:GetTexture() = undefined
            return now
        end

        Texture texture = undefined

        if borderThickness > 0
            texture = border:GetTexture()
            number scaleX = width / texture:GetWidth()
            number scaleY = height / texture:GetHeight()
            border:SetScale(scaleX, scaleY)
        end

        texture = background:GetTexture()
        number backgroundWidth = width
        number backgroundHeight = height

        number backgroundX = 0
        number backgroundY = 0

        if HasLeftBorder()
            backgroundWidth = backgroundWidth - borderThickness
            backgroundX = borderThickness
        end

        if HasRightBorder()
            backgroundWidth = backgroundWidth - borderThickness
        end

        if HasBottomBorder()
            backgroundHeight = backgroundHeight - borderThickness
            backgroundY = borderThickness
        end

        if HasTopBorder()
            backgroundHeight = backgroundHeight - borderThickness
        end

        background:SetPosition(backgroundX, backgroundY)
        background:SetSize(backgroundWidth, backgroundHeight)

        texture = clickEffect:GetTexture()
        clickEffect:SetPosition(backgroundX, backgroundY)
        clickEffect:SetScale(backgroundWidth / texture:GetWidth(), backgroundHeight / texture:GetHeight())

        texture = mouseOverEffect:GetTexture()
        mouseOverEffect:SetPosition(backgroundX, backgroundY)
        mouseOverEffect:SetScale(backgroundWidth / texture:GetWidth(), backgroundHeight / texture:GetHeight())

//        label:SetMaximumWidth(background:GetWidth() * background:GetScaleX())
        // Force the label to readjust to its new size.
//        SetText(label:GetText())
    end

    action UpdatePosition(number x, number y, number z)
        SetPosition(x, y, z)
    end

    action UpdateRotation(number angle)
        SetRotation(angle)
    end

    action UpdateFlipping(boolean flipX, boolean flipY)
        SetFlipX(flipX)
        SetFlipY(flipY)
    end

    action BeginMouseOver
        Add(mouseOverEffect)
    end

    action EndMouseOver
        Remove(mouseOverEffect)
    end

    action ClickedMouse
        Array<Item2D> items = GetChildren()
        if not items:Has(clickEffect)
            Add(clickEffect)
        end
    end

    action ReleasedMouse
        Remove(clickEffect)
    end

    action GainedSelection
        // TO DO
    end

    action LostSelection
        // TO DO
    end

    action Copy returns ControlView
        LabelBoxView content
        if background:UsingCustomGradient()
            if border:UsingCustomGradient()
                content:Initialize(background:GetGradient(), border:GetGradient())
            else
                content:Initialize(background:GetGradient(), border:GetColor())
            end
        else
            if border:UsingCustomGradient()
                content:Initialize(background:GetColor(), border:GetGradient())
            else
                content:Initialize(background:GetColor(), border:GetColor())
            end
        end

        content:SetBorderThickness(GetBorderThickness())
        content:SetText(GetText())
        return content
    end
end