package Libraries.Interface.Views

use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Painter2D
use Libraries.Game.Graphics.Texture
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.ColorGroup
use Libraries.Game.Graphics.Gradient

class ImageControlView is Drawable, ControlView
    
    boolean resizing = true
    ColorGroup previousColor = undefined
    ColorGroup clickColor = undefined

    on create
        Color color
        clickColor = color:Gray()
    end

    action Initialize(Drawable drawable)
        Load(drawable:GetTexture())
    end

    action SetResizing(boolean shouldResize)
        resizing = shouldResize
    end

    action GetResizing returns boolean
        return resizing
    end

    action Draw(Painter2D painter)
        parent:Drawable:Draw(painter)
    end

    action UpdateSize(number width, number height)
        Texture texture = GetTexture()
        if texture = undefined or resizing = false
            return now
        end

        SetSize(width, height)
    end

    action UpdatePosition(number x, number y, number z)
        SetPosition(x, y, z)
    end

    action UpdateRotation(number angle)
        SetRotation(angle)
    end

    action UpdateFlipping(boolean flipX, boolean flipY)
        SetFlipX(flipX)
        SetFlipY(flipY)
    end

    private action MixColorGroups(ColorGroup c1, ColorGroup c2) returns ColorGroup
        if c1 = undefined
            return c2
        elseif c2 = undefined
            return c1
        end

        if c1 is Color and c2 is Color
            return MixColors(cast(Color, c1), cast(Color, c2))
        else
            Gradient gradient
            Color newBottomLeft = MixColors(c1:GetBottomLeft(), c2:GetBottomLeft())
            Color newBottomRight = MixColors(c1:GetBottomRight(), c2:GetBottomRight())
            Color newTopLeft = MixColors(c1:GetTopLeft(), c2:GetTopLeft())
            Color newTopRight = MixColors(c1:GetTopRight(), c2:GetTopRight())
            gradient:Set(newBottomLeft, newBottomRight, newTopLeft, newTopRight)
            return gradient
        end
    end

    private action MixColors(Color c1, Color c2) returns Color
        Color color

        color:SetColor((c1:GetRed() + c2:GetRed()) / 2,
            (c1:GetGreen() + c2:GetGreen()) / 2,
            (c1:GetBlue() + c2:GetBlue()) / 2,
            (c1:GetAlpha() + c2:GetAlpha()) / 2)

        return color
    end

    action BeginMouseOver
        // TO DO
    end

    action EndMouseOver
        // TO DO
    end

    action ClickedMouse
        previousColor = GetColorGroup()
        SetColor(MixColorGroups(previousColor, clickColor))
    end

    action ReleasedMouse
        if previousColor not= undefined
            SetColor(previousColor)
            previousColor = undefined
        else
            UseDefaultColor()
        end
    end

    action GainedSelection
        // TO DO
    end

    action LostSelection
        // TO DO
    end

    action Copy returns ControlView
        ImageControlView content
        content:Initialize(me)
        return content
    end

end