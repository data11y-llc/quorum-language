package Libraries.Curriculum.TurtleProgram

use Libraries.Game.Game
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Item2D
use Libraries.Curriculum.TurtleProgram.ChangePropertiesCommand
use Libraries.Curriculum.TurtleProgram.Command
use Libraries.Curriculum.TurtleProgram.MoveCommand
use Libraries.Curriculum.TurtleProgram.PenCommand
use Libraries.Curriculum.TurtleProgram.RotationCommand
use Libraries.Curriculum.TurtleProgram.SayCommand
use Libraries.Curriculum.TurtleProgram.Turtle


class TurtleGame is Game

    Color color
    Turtle turtle
    Drawable background

    number originX = 150
    number originY = 50

    action CreateGame
        background:Load("media/code/Grid.png")
        Add(background)

        turtle:Load(me, originX, originY)
        turtle:SetPosition(originX + turtle:GetGridX() * turtle:GetPixelsPerSquare() - 25, originY + turtle:GetGridY() * turtle:GetPixelsPerSquare() - 25)
        Add(turtle)

        TurtleCommands()
    end

    action RepeatMoveForward(integer steps)
        repeat steps times
            turtle:MoveForward()
        end
    end


    action MoveForward
        turtle:MoveForward()
    end

    action TurnLeft
        turtle:TurnLeft()
    end

    action TurnRight
        turtle:TurnRight()
    end

    action PenDown
        turtle:PenDown()
    end

    action PenUp
        turtle:PenUp()
    end

    action SetPenWidth(integer width)
        turtle:SetPenWidth(width)
    end

    action SetPenColor(text color)
        turtle:SetPenColor(color)
    end

    action SetPenColor(number red, number green, number blue, number alpha)
        turtle:SetPenColor(red, green, blue, alpha)
    end

    action OutputLines
        turtle:OutputLines()
    end

    action GetX returns integer
        return turtle:GetForecastX()
    end

    action GetY returns integer
        return turtle:GetForecastY()
    end

    action GetDirection returns text
        return turtle:GetForecastDirection()
    end

    action SetStartingCoordinates(integer x, integer y)
        turtle:SetStartingCoordinates(x, y)
    end

    blueprint action TurtleCommands

end
