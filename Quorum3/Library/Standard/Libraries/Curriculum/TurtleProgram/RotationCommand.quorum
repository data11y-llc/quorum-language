package Libraries.Curriculum.TurtleProgram

use Libraries.Sound.Audio
use Libraries.Curriculum.TurtleProgram.ChangePropertiesCommand
use Libraries.Curriculum.TurtleProgram.Command
use Libraries.Curriculum.TurtleProgram.MoveCommand
use Libraries.Curriculum.TurtleProgram.PenCommand
use Libraries.Curriculum.TurtleProgram.SayCommand
use Libraries.Curriculum.TurtleProgram.Turtle
use Libraries.Curriculum.TurtleProgram.TurtleGame

class RotationCommand is Command
    
    Turtle turtle = undefined
    boolean turnLeft = true
    Audio audio = undefined
    boolean finished = false

    number rotationSpeed = 0
    number progress = 0
    number target = 90

    action SetTurnLeft(boolean left)
        turnLeft = left
    end

    action Start(Turtle turtle)
        me:turtle = turtle
        rotationSpeed = (turtle:GetSpeed() / turtle:GetPixelsPerSquare()) * 90

        if turnLeft
            audio = turtle:GetTurnLeftAudio()
            turtle:SetDirection((turtle:GetDirection() + 1) mod 4)
        else
            audio = turtle:GetTurnRightAudio()
            integer direction = turtle:GetDirection() - 1
            if direction < 0
                direction = 3
            end
            turtle:SetDirection(direction)
        end

        audio:Play()
    end

    action Update(number seconds)
        if finished
            return now
        end
        
        number toRotate = rotationSpeed * seconds
        if progress + toRotate > target
            toRotate = target - progress
            finished = true
        end

        progress = progress + toRotate

        if turnLeft
            toRotate = -toRotate
        end

        turtle:Rotate(toRotate)
    end

    action IsFinished returns boolean
        return finished and audio:IsPlaying() = false
    end

end